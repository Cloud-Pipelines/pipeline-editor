apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: data-passing-pipeline
  annotations:
    cloud-pipelines.net/pipeline-editor: "true"
spec:
  entrypoint: data-passing-pipeline
  templates:
    - name: Produce-anything
      inputs:
        parameters: []
        artifacts: []
      outputs:
        parameters: []
        artifacts:
          - name: data
            path: /tmp/outputs/data/data
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def _make_parent_dirs_and_return_path(file_path: str):
                import os
                os.makedirs(os.path.dirname(file_path), exist_ok=True)
                return file_path

            def produce_anything(data_path):
                with open(data_path, "w") as f:
                    f.write("produce_anything")

            import argparse
            _parser = argparse.ArgumentParser(prog='Produce anything', description='')
            _parser.add_argument("--data", dest="data_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = produce_anything(**_parsed_args)
        args:
          - "--data"
          - "{{outputs.artifacts.data.path}}"
    - name: Produce-something
      inputs:
        parameters: []
        artifacts: []
      outputs:
        parameters: []
        artifacts:
          - name: data
            path: /tmp/outputs/data/data
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def _make_parent_dirs_and_return_path(file_path: str):
                import os
                os.makedirs(os.path.dirname(file_path), exist_ok=True)
                return file_path

            def produce_something(data_path):
                with open(data_path, "w") as f:
                    f.write("produce_something")

            import argparse
            _parser = argparse.ArgumentParser(prog='Produce something', description='')
            _parser.add_argument("--data", dest="data_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = produce_something(**_parsed_args)
        args:
          - "--data"
          - "{{outputs.artifacts.data.path}}"
    - name: Produce-string
      inputs:
        parameters: []
        artifacts: []
      outputs:
        parameters: []
        artifacts:
          - name: Output
            path: /tmp/outputs/Output/data
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def produce_string():
                return "produce_string"

            def _serialize_str(str_value: str) -> str:
                if not isinstance(str_value, str):
                    raise TypeError('Value "{}" has type "{}" instead of str.'.format(str(str_value), str(type(str_value))))
                return str_value

            import argparse
            _parser = argparse.ArgumentParser(prog='Produce string', description='')
            _parser.add_argument("----output-paths", dest="_output_paths", type=str, nargs=1)
            _parsed_args = vars(_parser.parse_args())
            _output_files = _parsed_args.pop("_output_paths", [])

            _outputs = produce_string(**_parsed_args)

            _outputs = [_outputs]

            _output_serializers = [
                _serialize_str,

            ]

            import os
            for idx, output_file in enumerate(_output_files):
                try:
                    os.makedirs(os.path.dirname(output_file))
                except OSError:
                    pass
                with open(output_file, 'w') as f:
                    f.write(_output_serializers[idx](_outputs[idx]))
        args:
          - "----output-paths"
          - "{{outputs.artifacts.Output.path}}"
    - name: Consume-anything-as-value
      inputs:
        parameters:
          - name: data
        artifacts: []
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_anything_as_value(data):
                print("consume_anything_as_value: " + data)

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume anything as value', description='')
            _parser.add_argument("--data", dest="data", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_anything_as_value(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.parameters.data}}"
    - name: Convert-artifact-to-parameter
      inputs:
        artifacts:
          - name: artifact
            path: /tmp/inputs/artifact/data
      outputs:
        parameters:
          - name: parameter
            valueFrom:
              path: /tmp/inputs/parameter/data
      container:
        name: main
        image: alpine
        command:
          - sh
          - "-ec"
          - mkdir -p "$(dirname "$1")"; cp "$0" "$1"
          - "{{inputs.artifacts.artifact.path}}"
          - "{{outputs.parameters.parameter.path}}"
    - name: Consume-anything-as-file
      inputs:
        parameters: []
        artifacts:
          - name: data
            path: /tmp/inputs/data/data
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_anything_as_file(data_path):
                with open(data_path) as f:
                    print("consume_anything_as_file: " + f.read())

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume anything as file', description='')
            _parser.add_argument("--data", dest="data_path", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_anything_as_file(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.artifacts.data.path}}"
    - name: Consume-something-as-value
      inputs:
        parameters:
          - name: data
        artifacts: []
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_something_as_value(data):
                print("consume_something_as_value: " + data)

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume something as value', description='')
            _parser.add_argument("--data", dest="data", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_something_as_value(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.parameters.data}}"
    - name: Consume-something-as-file
      inputs:
        parameters: []
        artifacts:
          - name: data
            path: /tmp/inputs/data/data
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_something_as_file(data_path):
                with open(data_path) as f:
                    print("consume_something_as_file: " + f.read())

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume something as file', description='')
            _parser.add_argument("--data", dest="data_path", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_something_as_file(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.artifacts.data.path}}"
    - name: Consume-string-as-value
      inputs:
        parameters:
          - name: data
        artifacts: []
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_string_as_value(data):
                print("consume_string_as_value: " + data)

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume string as value', description='')
            _parser.add_argument("--data", dest="data", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_string_as_value(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.parameters.data}}"
    - name: Consume-string-as-file
      inputs:
        parameters: []
        artifacts:
          - name: data
            path: /tmp/inputs/data/data
      outputs:
        parameters: []
        artifacts: []
      container:
        name: main
        image: python:3.7
        command:
          - sh
          - "-ec"
          - |
            program_path=$(mktemp)
            printf "%s" "$0" > "$program_path"
            python3 -u "$program_path" "$@"
          - |
            def consume_string_as_file(data_path):
                with open(data_path) as f:
                    print("consume_string_as_file: " + f.read())

            import argparse
            _parser = argparse.ArgumentParser(prog='Consume string as file', description='')
            _parser.add_argument("--data", dest="data_path", type=str, required=True, default=argparse.SUPPRESS)
            _parsed_args = vars(_parser.parse_args())

            _outputs = consume_string_as_file(**_parsed_args)
        args:
          - "--data"
          - "{{inputs.artifacts.data.path}}"
    - name: data-passing-pipeline
      inputs:
        parameters:
          - name: anything_param
          - name: something_param
          - name: string_param
        artifacts:
          - name: anything_param
          - name: something_param
          - name: string_param
      outputs:
        artifacts: []
      dag:
        tasks:
          - name: Produce-anything
            template: Produce-anything
            arguments:
              parameters: []
              artifacts: []
            dependencies: []
          - name: Produce-something
            template: Produce-something
            arguments:
              parameters: []
              artifacts: []
            dependencies: []
          - name: Produce-string
            template: Produce-string
            arguments:
              parameters: []
              artifacts: []
            dependencies: []
          - name: Make-parameter-for-Produce-anything-output-data
            template: Convert-artifact-to-parameter
            arguments:
              artifacts:
                - name: artifact
                  from: "{{tasks.Produce-anything.outputs.artifacts.data}}"
            dependencies:
              - Produce-anything
          - name: Consume-anything-as-value-5
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-anything-output-data.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-anything-output-data
          - name: Consume-anything-as-file-5
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-anything.outputs.artifacts.data}}"
            dependencies:
              - Produce-anything
          - name: Make-parameter-for-Produce-something-output-data
            template: Convert-artifact-to-parameter
            arguments:
              artifacts:
                - name: artifact
                  from: "{{tasks.Produce-something.outputs.artifacts.data}}"
            dependencies:
              - Produce-something
          - name: Consume-anything-as-value-6
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-something-output-data.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-something-output-data
          - name: Consume-anything-as-file-6
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-something.outputs.artifacts.data}}"
            dependencies:
              - Produce-something
          - name: Make-parameter-for-Produce-string-output-Output
            template: Convert-artifact-to-parameter
            arguments:
              artifacts:
                - name: artifact
                  from: "{{tasks.Produce-string.outputs.artifacts.Output}}"
            dependencies:
              - Produce-string
          - name: Consume-anything-as-value-7
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-string-output-Output.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-string-output-Output
          - name: Consume-anything-as-file-7
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-string.outputs.artifacts.Output}}"
            dependencies:
              - Produce-string
          - name: Consume-something-as-value-4
            template: Consume-something-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-anything-output-data.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-anything-output-data
          - name: Consume-something-as-file-4
            template: Consume-something-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-anything.outputs.artifacts.data}}"
            dependencies:
              - Produce-anything
          - name: Consume-something-as-value-5
            template: Consume-something-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-something-output-data.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-something-output-data
          - name: Consume-something-as-file-5
            template: Consume-something-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-something.outputs.artifacts.data}}"
            dependencies:
              - Produce-something
          - name: Consume-string-as-value-5
            template: Consume-string-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-string-output-Output.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-string-output-Output
          - name: Consume-string-as-file-5
            template: Consume-string-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-string.outputs.artifacts.Output}}"
            dependencies:
              - Produce-string
          - name: Consume-string-as-value-4
            template: Consume-string-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{tasks.Make-parameter-for-Produce-anything-output-data.outputs.parameters.parameter}}"
              artifacts: []
            dependencies:
              - Make-parameter-for-Produce-anything-output-data
          - name: Consume-string-as-file-4
            template: Consume-string-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{tasks.Produce-anything.outputs.artifacts.data}}"
            dependencies:
              - Produce-anything
          - name: Consume-anything-as-value-2
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.anything_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-anything-as-file-2
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.anything_param}}"
            dependencies: []
          - name: Consume-anything-as-value-3
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.something_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-anything-as-file-3
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.something_param}}"
            dependencies: []
          - name: Consume-anything-as-value-4
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.string_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-anything-as-file-4
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.string_param}}"
            dependencies: []
          - name: Consume-something-as-value-2
            template: Consume-something-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.anything_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-something-as-file-2
            template: Consume-something-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.anything_param}}"
            dependencies: []
          - name: Consume-something-as-value-3
            template: Consume-something-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.something_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-something-as-file-3
            template: Consume-something-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.something_param}}"
            dependencies: []
          - name: Consume-string-as-value-3
            template: Consume-string-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.string_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-string-as-file-3
            template: Consume-string-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.string_param}}"
            dependencies: []
          - name: Consume-string-as-value-2
            template: Consume-string-as-value
            arguments:
              parameters:
                - name: data
                  value: "{{inputs.parameters.anything_param}}"
              artifacts: []
            dependencies: []
          - name: Consume-string-as-file-2
            template: Consume-string-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  from: "{{inputs.artifacts.anything_param}}"
            dependencies: []
          - name: Consume-anything-as-value
            template: Consume-anything-as-value
            arguments:
              parameters:
                - name: data
                  value: constant
              artifacts: []
            dependencies: []
          - name: Consume-anything-as-file
            template: Consume-anything-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  raw:
                    data: constant
            dependencies: []
          - name: Consume-something-as-value
            template: Consume-something-as-value
            arguments:
              parameters:
                - name: data
                  value: constant
              artifacts: []
            dependencies: []
          - name: Consume-something-as-file
            template: Consume-something-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  raw:
                    data: constant
            dependencies: []
          - name: Consume-string-as-value
            template: Consume-string-as-value
            arguments:
              parameters:
                - name: data
                  value: constant
              artifacts: []
            dependencies: []
          - name: Consume-string-as-file
            template: Consume-string-as-file
            arguments:
              parameters: []
              artifacts:
                - name: data
                  raw:
                    data: constant
            dependencies: []
  arguments:
    parameters:
      - name: anything_param
        value: anything_param
      - name: something_param
        value: something_param
      - name: string_param
        value: string_param_override
    artifacts:
      - name: anything_param
        raw:
          data: anything_param
      - name: something_param
        raw:
          data: something_param
      - name: string_param
        raw:
          data: string_param_override
