/* Use the proper box layout model by default, but allow elements to override */
html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}
details > * {
  box-sizing: border-box;
}

.dndflow {
  flex-direction: row;
  display: flex;
  height: 100%;
}

.dndflow aside {
  width: 300px;
  border-right: 1px solid #eee;
  padding: 15px 10px;
  font-size: 12px;
  background: #fcfcfc;
}

.dndflow aside .description {
  margin-bottom: 10px;
}

.dndflow .nodeList {
  overflow: auto;
}

.dndflow .sidebar-node {
  /* Resets position: absolute */
  position: relative;
  margin: 5px;
}

/* Node styles */

.react-flow__node {
  padding: 10px;
  border-radius: 3px;
  width: 180px;
  min-height: 40px;
  font-size: 12px;
  color: #222;
  text-align: center;
  border-width: 1px;
  border-style: solid;
  background: #fff;
  border-color: #1a192b;
  --border-color: #1a192b;
}

.react-flow__node.selectable:hover {
    box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.08);
}

.react-flow__node.selected,
.react-flow__node.selected:hover
{
  box-shadow: 0 0 0 0.5px var(--border-color);
}

/* Connecting, but the connection is not valid by default */
.react-flow__handle-connecting {
  background: #ff6060;
}

/* Connecting, but the connection is valid */
.react-flow__handle-valid {
  background: #55dd99;
}

.react-flow__handle.missing-argument {
  background: #ff6060;
}

.dndflow .reactflow-wrapper {
  flex-grow: 1;
  height: 100%;
  min-height: 50%;
}

.dndflow .react-flow__handle .label {
  position: absolute;
  left: 50%;
  top: 50%;

  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  /* max-width: 50px; */
}

.dndflow .react-flow__handle.react-flow__handle-top .label {
  transform: translate(-50%, -50%) translateY(calc(-50% - 4px));
}

.dndflow .react-flow__handle.react-flow__handle-bottom .label {
  transform: translate(-50%, -50%) translateY(calc(50% + 4px));
}

.dndflow .react-flow__handle.react-flow__handle-left .label {
  transform: translate(-50%, -50%) translateX(calc(-50% - 4px));
}

.dndflow .react-flow__handle.react-flow__handle-right .label {
  transform: translate(-50%, -50%) translateX(calc(50% + 4px));
}

.dndflow .react-flow__handle.react-flow__handle-bottom .label-angled {
  --angle: -45deg;
  transform: translate(-50%, -50%) rotate(var(--angle)) translateX(calc(-50% - 4px));
}

.dndflow .react-flow__handle.react-flow__handle-top .label-angled {
  --angle: -45deg;
  transform: translate(-50%, -50%) rotate(var(--angle)) translateX(calc(50% + 4px));
}

@media (max-width: 640px) {
  .dndflow {
    flex-direction: column;
  }

  .dndflow aside {
    width: 100%;
  }

  .react-flow__minimap {
    display: none;
  }
}

.highlight-invalid-inputs input:required:invalid {
  /* box-shadow: 0 0 0 0.5px #FF0000; */
  /* border-color: #c00000; */
  /* border: 2px dashed red; */
  border: 1px solid red;
}

.link-button {
  background-color: transparent;
  border: none;
  cursor: pointer;
  /* text-decoration: underline; */
  display: inline;
  margin: 0;
  padding: 0;
}
